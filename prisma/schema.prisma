generator client {
  provider = "prisma-client-js"
  previewFeatures = ["extendedWhereUnique"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model addresses {
  id           Int        @id(map: "addresses_pk") @default(autoincrement())
  street       String     @db.VarChar(255)
  number       String?    @db.VarChar(255)
  neighborhood String     @db.VarChar(255)
  cityId       Int
  cities       cities     @relation(fields: [cityId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "addresses_fk0")
  features     features[]
}

model cities {
  id        Int         @id(map: "cities_pk") @default(autoincrement())
  name      String      @unique @db.VarChar(255)
  countryId Int
  addresses addresses[]
  countries countries   @relation(fields: [countryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cities_fk0")
  travels   travels[]
}

model countries {
  id     Int      @id(map: "countries_pk") @default(autoincrement())
  name   String   @unique @db.VarChar(255)
  cities cities[]
}

model travels {
  id          Int           @id(map: "travels_pk") @default(autoincrement())
  userId      Int           @default(autoincrement())
  name        String
  cityId      Int
  users       users         @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "travels_fk0")
  cities      cities        @relation(fields: [cityId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "travels_fk1")
  travelsData travelsData[]
}

model travelsData {
  id        Int      @id(map: "travelsData_pk") @default(autoincrement())
  travelId  Int      @default(autoincrement())
  featureId Int
  travels   travels  @relation(fields: [travelId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "travelsData_fk0")
  features  features @relation(fields: [featureId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "travelsData_fk1")
}

model users {
  id       Int        @id(map: "users_pk") @default(autoincrement())
  name     String     @db.VarChar(255)
  email    String     @unique @db.VarChar(255)
  password String     @db.VarChar(255)
  img      String     @db.VarChar(255)
  sessions sessions[]
  travels  travels[]
}

model sessions {
  id     Int    @id(map: "sessions_pk") @default(autoincrement())
  userId Int
  token  String @unique
  users  users  @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sessions_fk0")
}

model features {
  id          Int           @id(map: "features_pk") @default(autoincrement())
  name        String        @db.VarChar(255)
  type        ftypes
  addressId   Int
  price       Int?
  img         String?       @db.VarChar(255)
  addresses   addresses     @relation(fields: [addressId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "features_fk0")
  travelsData travelsData[]
}

enum ftypes {
  hotel
  restaurant
  attraction
}
